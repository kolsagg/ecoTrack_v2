{
    "openapi": "3.1.0",
    "info": {
        "title": "EcoTrack API",
        "description": "QR-Based Digital Expense Tracking Application API",
        "version": "1.0.0"
    },
    "paths": {
        "/health": {
            "get": {
                "tags": ["Health Check"],
                "summary": "Health Check",
                "description": "Temel sistem sağlık kontrolü",
                "operationId": "health_check_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Health Check Health Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health/detailed": {
            "get": {
                "tags": ["Health Check"],
                "summary": "Detailed Health Check",
                "description": "Detaylı sistem sağlık kontrolü",
                "operationId": "detailed_health_check_health_detailed_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Detailed Health Check Health Detailed Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health/database": {
            "get": {
                "tags": ["Health Check"],
                "summary": "Database Health Check",
                "description": "Veritabanı sağlık kontrolü",
                "operationId": "database_health_check_health_database_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Database Health Check Health Database Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health/metrics": {
            "get": {
                "tags": ["Health Check"],
                "summary": "System Metrics",
                "description": "Sistem metrikleri (yetkilendirilmiş kullanıcılar için)",
                "operationId": "system_metrics_health_metrics_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response System Metrics Health Metrics Get"
                                }
                            }
                        }
                    }
                },
                "security": [{ "HTTPBearer": [] }]
            }
        },
        "/health/ready": {
            "get": {
                "tags": ["Health Check"],
                "summary": "Readiness Check",
                "description": "Kubernetes readiness probe",
                "operationId": "readiness_check_health_ready_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Readiness Check Health Ready Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health/live": {
            "get": {
                "tags": ["Health Check"],
                "summary": "Liveness Check",
                "description": "Kubernetes liveness probe",
                "operationId": "liveness_check_health_live_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Liveness Check Health Live Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": ["auth"],
                "summary": "Login",
                "description": "Login with email and password.",
                "operationId": "login_api_v1_auth_login_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Login Api V1 Auth Login Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": ["auth"],
                "summary": "Register",
                "description": "Register a new user.",
                "operationId": "register_api_v1_auth_register_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSignUp"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Register Api V1 Auth Register Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/reset-password": {
            "post": {
                "tags": ["auth"],
                "summary": "Reset Password",
                "description": "Send password reset email.",
                "operationId": "reset_password_api_v1_auth_reset_password_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Reset Password Api V1 Auth Reset Password Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/reset-password/confirm": {
            "post": {
                "tags": ["auth"],
                "summary": "Confirm Reset",
                "description": "Confirm password reset with token and new password.",
                "operationId": "confirm_reset_api_v1_auth_reset_password_confirm_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmResetRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Confirm Reset Api V1 Auth Reset Password Confirm Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/mfa/status": {
            "get": {
                "tags": ["auth"],
                "summary": "Get Mfa Status",
                "description": "Get MFA status for the current user.",
                "operationId": "get_mfa_status_api_v1_auth_mfa_status_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Get Mfa Status Api V1 Auth Mfa Status Get"
                                }
                            }
                        }
                    }
                },
                "security": [{ "HTTPBearer": [] }]
            }
        },
        "/api/v1/auth/mfa/factors": {
            "get": {
                "tags": ["auth"],
                "summary": "List Factors",
                "description": "List all MFA factors for the current user.",
                "operationId": "list_factors_api_v1_auth_mfa_factors_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response List Factors Api V1 Auth Mfa Factors Get"
                                }
                            }
                        }
                    }
                },
                "security": [{ "HTTPBearer": [] }]
            }
        },
        "/api/v1/auth/mfa/totp/create": {
            "post": {
                "tags": ["auth"],
                "summary": "Create Totp",
                "description": "Create a new TOTP factor for MFA.",
                "operationId": "create_totp_api_v1_auth_mfa_totp_create_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Create Totp Api V1 Auth Mfa Totp Create Post"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/mfa/totp/verify": {
            "post": {
                "tags": ["auth"],
                "summary": "Verify Totp",
                "description": "Verify a TOTP factor during enrollment.",
                "operationId": "verify_totp_api_v1_auth_mfa_totp_verify_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyTOTPRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Verify Totp Api V1 Auth Mfa Totp Verify Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/mfa/totp/challenge": {
            "post": {
                "tags": ["auth"],
                "summary": "Challenge Totp",
                "description": "Challenge a TOTP factor during login.",
                "operationId": "challenge_totp_api_v1_auth_mfa_totp_challenge_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyTOTPRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Challenge Totp Api V1 Auth Mfa Totp Challenge Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/mfa/totp/disable": {
            "post": {
                "tags": ["auth"],
                "summary": "Disable Totp",
                "description": "Disable TOTP factor for MFA.",
                "operationId": "disable_totp_api_v1_auth_mfa_totp_disable_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DisableTOTPRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Disable Totp Api V1 Auth Mfa Totp Disable Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/account": {
            "delete": {
                "tags": ["auth"],
                "summary": "Delete Account",
                "description": "Delete user account and all associated data.\nRequires password verification for security.",
                "operationId": "delete_account_api_v1_auth_account_delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Delete Account Api V1 Auth Account Delete"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/receipts/scan": {
            "post": {
                "tags": ["receipts"],
                "summary": "Scan Qr Receipt",
                "description": "Process QR code data and create receipt with expenses",
                "operationId": "scan_qr_receipt_api_v1_receipts_scan_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QRReceiptRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QRReceiptResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }]
            }
        },
        "/api/v1/receipts": {
            "get": {
                "tags": ["receipts"],
                "summary": "List Receipts",
                "description": "List user's receipts with filtering, pagination and sorting",
                "operationId": "list_receipts_api_v1_receipts_get",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Page number",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Items per page",
                            "default": 20,
                            "title": "Limit"
                        },
                        "description": "Items per page"
                    },
                    {
                        "name": "merchant",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "description": "Filter by merchant name",
                            "title": "Merchant"
                        },
                        "description": "Filter by merchant name"
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "string", "format": "date-time" },
                                { "type": "null" }
                            ],
                            "description": "Filter from date",
                            "title": "Date From"
                        },
                        "description": "Filter from date"
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "string", "format": "date-time" },
                                { "type": "null" }
                            ],
                            "description": "Filter to date",
                            "title": "Date To"
                        },
                        "description": "Filter to date"
                    },
                    {
                        "name": "min_amount",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "number" }, { "type": "null" }],
                            "description": "Minimum amount filter",
                            "title": "Min Amount"
                        },
                        "description": "Minimum amount filter"
                    },
                    {
                        "name": "max_amount",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "number" }, { "type": "null" }],
                            "description": "Maximum amount filter",
                            "title": "Max Amount"
                        },
                        "description": "Maximum amount filter"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Sort field",
                            "default": "transaction_date",
                            "title": "Sort By"
                        },
                        "description": "Sort field"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^(asc|desc)$",
                            "description": "Sort order",
                            "default": "desc",
                            "title": "Sort Order"
                        },
                        "description": "Sort order"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReceiptListResponse"
                                    },
                                    "title": "Response List Receipts Api V1 Receipts Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/receipts/{receipt_id}": {
            "get": {
                "tags": ["receipts"],
                "summary": "Get Receipt Detail",
                "description": "Get detailed receipt information with expenses",
                "operationId": "get_receipt_detail_api_v1_receipts__receipt_id__get",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "receipt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Receipt Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReceiptDetailResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/receipts/public/{receipt_id}": {
            "get": {
                "tags": ["receipts"],
                "summary": "Get Public Receipt",
                "description": "Get public receipt information without authentication\nThis endpoint is used when someone scans a QR code but is not logged in\nReturns basic receipt information for public viewing",
                "operationId": "get_public_receipt_api_v1_receipts_public__receipt_id__get",
                "parameters": [
                    {
                        "name": "receipt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Receipt Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/receipts/receipt/{receipt_id}": {
            "get": {
                "tags": ["receipts"],
                "summary": "Get Receipt Web View",
                "description": "Web view for receipt - serves HTML page for public receipt viewing\nThis endpoint is accessed when someone visits the URL from QR code",
                "operationId": "get_receipt_web_view_api_v1_receipts_receipt__receipt_id__get",
                "parameters": [
                    {
                        "name": "receipt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Receipt Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "text/html": { "schema": { "type": "string" } }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/expenses": {
            "post": {
                "tags": ["expenses"],
                "summary": "Create Manual Expense",
                "description": "Create a manual expense entry with multiple items (auto-creates receipt)",
                "operationId": "create_manual_expense_api_v1_expenses_post",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManualExpenseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpenseResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["expenses"],
                "summary": "List Expenses",
                "description": "List user's expenses (summary) with filtering, pagination and sorting",
                "operationId": "list_expenses_api_v1_expenses_get",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Page number",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Items per page",
                            "default": 20,
                            "title": "Limit"
                        },
                        "description": "Items per page"
                    },
                    {
                        "name": "merchant",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "description": "Filter by merchant name",
                            "title": "Merchant"
                        },
                        "description": "Filter by merchant name"
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "string", "format": "date-time" },
                                { "type": "null" }
                            ],
                            "description": "Filter from date",
                            "title": "Date From"
                        },
                        "description": "Filter from date"
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "string", "format": "date-time" },
                                { "type": "null" }
                            ],
                            "description": "Filter to date",
                            "title": "Date To"
                        },
                        "description": "Filter to date"
                    },
                    {
                        "name": "min_amount",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "number" }, { "type": "null" }],
                            "description": "Minimum amount filter",
                            "title": "Min Amount"
                        },
                        "description": "Minimum amount filter"
                    },
                    {
                        "name": "max_amount",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "number" }, { "type": "null" }],
                            "description": "Maximum amount filter",
                            "title": "Max Amount"
                        },
                        "description": "Maximum amount filter"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Sort field",
                            "default": "expense_date",
                            "title": "Sort By"
                        },
                        "description": "Sort field"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^(asc|desc)$",
                            "description": "Sort order",
                            "default": "desc",
                            "title": "Sort Order"
                        },
                        "description": "Sort order"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExpenseListResponse"
                                    },
                                    "title": "Response List Expenses Api V1 Expenses Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/expenses/{expense_id}": {
            "get": {
                "tags": ["expenses"],
                "summary": "Get Expense",
                "description": "Get a specific expense by ID with all items",
                "operationId": "get_expense_api_v1_expenses__expense_id__get",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "expense_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Expense Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpenseResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["expenses"],
                "summary": "Update Expense",
                "description": "Update an existing expense (summary level only)",
                "operationId": "update_expense_api_v1_expenses__expense_id__put",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "expense_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Expense Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpenseResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["expenses"],
                "summary": "Delete Expense",
                "description": "Delete an expense and all its items",
                "operationId": "delete_expense_api_v1_expenses__expense_id__delete",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "expense_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Expense Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/expenses/{expense_id}/items": {
            "post": {
                "tags": ["expenses"],
                "summary": "Create Expense Item",
                "description": "Add a new item to an existing expense",
                "operationId": "create_expense_item_api_v1_expenses__expense_id__items_post",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "expense_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Expense Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseItemCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpenseItemResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["expenses"],
                "summary": "List Expense Items",
                "description": "List all items for a specific expense",
                "operationId": "list_expense_items_api_v1_expenses__expense_id__items_get",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "expense_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Expense Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExpenseItemResponse"
                                    },
                                    "title": "Response List Expense Items Api V1 Expenses  Expense Id  Items Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/expenses/{expense_id}/items/{item_id}": {
            "put": {
                "tags": ["expenses"],
                "summary": "Update Expense Item",
                "description": "Update an expense item",
                "operationId": "update_expense_item_api_v1_expenses__expense_id__items__item_id__put",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "expense_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Expense Id"
                        }
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseItemUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpenseItemResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["expenses"],
                "summary": "Delete Expense Item",
                "description": "Delete an expense item",
                "operationId": "delete_expense_item_api_v1_expenses__expense_id__items__item_id__delete",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "expense_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Expense Id"
                        }
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Item Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/categories": {
            "get": {
                "tags": ["categories"],
                "summary": "List Categories",
                "description": "List all categories (predefined + user's custom categories)",
                "operationId": "list_categories_api_v1_categories_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryResponse"
                                    },
                                    "type": "array",
                                    "title": "Response List Categories Api V1 Categories Get"
                                }
                            }
                        }
                    }
                },
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }]
            },
            "post": {
                "tags": ["categories"],
                "summary": "Create Category",
                "description": "Create a new custom category for the user",
                "operationId": "create_category_api_v1_categories_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }]
            }
        },
        "/api/v1/categories/{category_id}": {
            "put": {
                "tags": ["categories"],
                "summary": "Update Category",
                "description": "Update a user's custom category",
                "operationId": "update_category_api_v1_categories__category_id__put",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Category Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["categories"],
                "summary": "Delete Category",
                "description": "Delete a user's custom category\n\n**Note:** If the category is being used by expense items, \nthose items will be automatically reassigned to the \"Other\" category.",
                "operationId": "delete_category_api_v1_categories__category_id__delete",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Category Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/merchants/": {
            "post": {
                "tags": ["merchants"],
                "summary": "Create Merchant",
                "description": "Create a new merchant partner (Admin only)\n\nCreates a new merchant with auto-generated API key for webhook integration.",
                "operationId": "create_merchant_api_v1_merchants__post",
                "security": [{ "HTTPBearer": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MerchantCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MerchantResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["merchants"],
                "summary": "List Merchants",
                "description": "List all merchant partners (Admin only)\n\nReturns paginated list of merchants with optional filtering by active status.",
                "operationId": "list_merchants_api_v1_merchants__get",
                "security": [{ "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Page number",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Page size",
                            "default": 20,
                            "title": "Size"
                        },
                        "description": "Page size"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "boolean" },
                                { "type": "null" }
                            ],
                            "description": "Filter by active status",
                            "title": "Is Active"
                        },
                        "description": "Filter by active status"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MerchantListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/merchants/{merchant_id}": {
            "get": {
                "tags": ["merchants"],
                "summary": "Get Merchant",
                "description": "Get merchant by ID (Admin only)",
                "operationId": "get_merchant_api_v1_merchants__merchant_id__get",
                "security": [{ "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Merchant Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MerchantResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["merchants"],
                "summary": "Update Merchant",
                "description": "Update merchant information (Admin only)",
                "operationId": "update_merchant_api_v1_merchants__merchant_id__put",
                "security": [{ "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Merchant Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MerchantUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MerchantResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["merchants"],
                "summary": "Deactivate Merchant",
                "description": "Deactivate merchant partnership (Admin only)\n\nThis doesn't delete the merchant but sets is_active to False.",
                "operationId": "deactivate_merchant_api_v1_merchants__merchant_id__delete",
                "security": [{ "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Merchant Id"
                        }
                    }
                ],
                "responses": {
                    "204": { "description": "Successful Response" },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/merchants/{merchant_id}/regenerate-api-key": {
            "post": {
                "tags": ["merchants"],
                "summary": "Regenerate Api Key",
                "description": "Regenerate API key for merchant (Admin only)\n\nReturns the new API key. The old key will be immediately invalidated.",
                "operationId": "regenerate_api_key_api_v1_merchants__merchant_id__regenerate_api_key_post",
                "security": [{ "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Merchant Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/webhooks/merchant/{merchant_id}/transaction": {
            "post": {
                "tags": ["webhooks"],
                "summary": "Receive Merchant Transaction",
                "description": "Receive real-time transaction data from merchant POS systems\n\nThis endpoint processes incoming transaction data from merchant partners,\nmatches customers, and automatically creates receipts and expenses.\n\nRequires valid merchant API key in X-API-Key header.",
                "operationId": "receive_merchant_transaction_api_v1_webhooks_merchant__merchant_id__transaction_post",
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Merchant Id"
                        }
                    },
                    {
                        "name": "x-api-key",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Merchant API key",
                            "title": "X-Api-Key"
                        },
                        "description": "Merchant API key"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookTransactionData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookProcessingResult"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/webhooks/merchant/{merchant_id}/test-transaction": {
            "post": {
                "tags": ["webhooks"],
                "summary": "Test Merchant Transaction",
                "description": "Test endpoint for merchant integration testing (Admin only)\n\nAllows testing of the webhook processing flow without requiring\na valid merchant API key. Used for integration testing.",
                "operationId": "test_merchant_transaction_api_v1_webhooks_merchant__merchant_id__test_transaction_post",
                "security": [{ "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Merchant Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestTransactionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookProcessingResult"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/webhooks/merchant/{merchant_id}/logs": {
            "get": {
                "tags": ["webhooks"],
                "summary": "Get Webhook Logs",
                "description": "Get webhook delivery logs and status tracking (Admin only)\n\nReturns paginated webhook logs for a specific merchant with optional status filtering.",
                "operationId": "get_webhook_logs_api_v1_webhooks_merchant__merchant_id__logs_get",
                "security": [{ "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Merchant Id"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Page number",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Page size",
                            "default": 20,
                            "title": "Size"
                        },
                        "description": "Page size"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/WebhookStatus"
                                },
                                { "type": "null" }
                            ],
                            "description": "Filter by webhook status",
                            "title": "Status"
                        },
                        "description": "Filter by webhook status"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookLogListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/webhooks/logs/{log_id}/retry": {
            "post": {
                "tags": ["webhooks"],
                "summary": "Retry Webhook",
                "description": "Retry a failed webhook processing (Admin only)\n\nAttempts to reprocess a failed webhook. Only works for webhooks\nwith 'failed' status and retry count less than maximum.",
                "operationId": "retry_webhook_api_v1_webhooks_logs__log_id__retry_post",
                "security": [{ "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "log_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Log Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/webhooks/merchant/{merchant_id}/stats": {
            "get": {
                "tags": ["webhooks"],
                "summary": "Get Webhook Stats",
                "description": "Get webhook statistics for a merchant (Admin only)\n\nReturns summary statistics including success rate, total transactions, etc.",
                "operationId": "get_webhook_stats_api_v1_webhooks_merchant__merchant_id__stats_get",
                "security": [{ "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Merchant Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/merchants/{merchant_id}/reviews": {
            "post": {
                "tags": ["reviews"],
                "summary": "Create Merchant Review",
                "description": "Create a review for a merchant",
                "operationId": "create_merchant_review_api_v1_reviews_merchants__merchant_id__reviews_post",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Merchant Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": ["reviews"],
                "summary": "Get Merchant Reviews",
                "description": "Get reviews for a merchant with rating summary",
                "operationId": "get_merchant_reviews_api_v1_reviews_merchants__merchant_id__reviews_get",
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Merchant Id"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Offset"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MerchantReviewsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/merchants/{merchant_id}/rating": {
            "get": {
                "tags": ["reviews"],
                "summary": "Get Merchant Rating",
                "description": "Get merchant rating summary only",
                "operationId": "get_merchant_rating_api_v1_reviews_merchants__merchant_id__rating_get",
                "parameters": [
                    {
                        "name": "merchant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Merchant Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MerchantRatingResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/reviews/{review_id}": {
            "put": {
                "tags": ["reviews"],
                "summary": "Update Review",
                "description": "Update a review (only by the review author)",
                "operationId": "update_review_api_v1_reviews_reviews__review_id__put",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "review_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Review Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["reviews"],
                "summary": "Delete Review",
                "description": "Delete a review (only by the review author)",
                "operationId": "delete_review_api_v1_reviews_reviews__review_id__delete",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "review_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Review Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/receipts/{receipt_id}/review": {
            "post": {
                "tags": ["reviews"],
                "summary": "Create Review From Receipt",
                "description": "Create a merchant review triggered by a receipt (authenticated users)",
                "operationId": "create_review_from_receipt_api_v1_reviews_receipts__receipt_id__review_post",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "receipt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Receipt Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reviews/receipts/{receipt_id}/review/anonymous": {
            "post": {
                "tags": ["reviews"],
                "summary": "Create Anonymous Review From Receipt",
                "description": "Create an anonymous merchant review triggered by a receipt (no authentication required)",
                "operationId": "create_anonymous_review_from_receipt_api_v1_reviews_receipts__receipt_id__review_anonymous_post",
                "parameters": [
                    {
                        "name": "receipt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Receipt Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reports/health": {
            "get": {
                "tags": ["Financial Reporting"],
                "summary": "Reporting Service Health Check",
                "description": "Public health check for reporting service",
                "operationId": "health_check_api_v1_reports_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    }
                }
            }
        },
        "/api/v1/reports/category-distribution": {
            "get": {
                "tags": ["Financial Reporting"],
                "summary": "Monthly Category Distribution (Pie/Donut Chart)",
                "description": "**A. Pasta/Donut Grafik Yanıtı**\n\nReturns monthly category distribution in the exact format specified:\n```json\n{\n  \"reportTitle\": \"Ocak 2024 Kategori Dağılımı\",\n  \"totalAmount\": 2450.75,\n  \"chartType\": \"pie\",\n  \"data\": [\n    { \"label\": \"Gıda\", \"value\": 1250.75, \"percentage\": 51.0, \"color\": \"#FF5722\" },\n    { \"label\": \"Ulaşım\", \"value\": 890.50, \"percentage\": 36.3, \"color\": \"#2196F3\" }\n  ]\n}\n```\n\n**Usage:** Perfect for showing spending breakdown by category for a specific month",
                "operationId": "get_category_distribution_api_v1_reports_category_distribution_get",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "Year (e.g., 2025)",
                            "title": "Year"
                        },
                        "description": "Year (e.g., 2025)"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "maximum": 12,
                            "minimum": 1,
                            "description": "Month (1-12)",
                            "title": "Month"
                        },
                        "description": "Month (1-12)"
                    },
                    {
                        "name": "chart_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/ChartType",
                            "description": "Chart type (pie/donut)",
                            "default": "pie"
                        },
                        "description": "Chart type (pie/donut)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Financial Reporting"],
                "summary": "Monthly Category Distribution (POST)",
                "description": "POST version of category distribution endpoint for complex requests",
                "operationId": "post_category_distribution_api_v1_reports_category_distribution_post",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MonthlyReportRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reports/budget-vs-actual": {
            "get": {
                "tags": ["Financial Reporting"],
                "summary": "Budget vs Actual Spending (Bar Chart)",
                "description": "**B. Çubuk Grafik Yanıtı**\n\nReturns budget vs actual spending comparison in the exact format specified:\n```json\n{\n  \"reportTitle\": \"Ocak 2024 Bütçe vs. Harcama\",\n  \"chartType\": \"bar\",\n  \"labels\": [\"Gıda\", \"Ulaşım\", \"Fatura\"],\n  \"datasets\": [\n    { \"label\": \"Bütçe\", \"color\": \"#4CAF50\", \"data\": [1000, 400, 600] },\n    { \"label\": \"Gerçekleşen\", \"color\": \"#F44336\", \"data\": [1250, 350, 580] }\n  ]\n}\n```\n\n**Usage:** Compare budgeted amounts vs actual spending by category\n**Note:** Requires user to have budget set up first",
                "operationId": "get_budget_vs_actual_api_v1_reports_budget_vs_actual_get",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "Year (e.g., 2024)",
                            "title": "Year"
                        },
                        "description": "Year (e.g., 2024)"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "maximum": 12,
                            "minimum": 1,
                            "description": "Month (1-12)",
                            "title": "Month"
                        },
                        "description": "Month (1-12)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Financial Reporting"],
                "summary": "Budget vs Actual Spending (POST)",
                "description": "POST version of budget vs actual endpoint for complex requests",
                "operationId": "post_budget_vs_actual_api_v1_reports_budget_vs_actual_post",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MonthlyReportRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reports/spending-trends": {
            "get": {
                "tags": ["Financial Reporting"],
                "summary": "Spending Trends Over Time (Line Chart)",
                "description": "**C. Çizgi Grafik Yanıtı**\n\nReturns spending trends in the exact format specified:\n```json\n{\n  \"reportTitle\": \"Son 6 Aylık Harcama Trendi\",\n  \"chartType\": \"line\",\n  \"xAxisLabels\": { \"0\": \"Oca\", \"1\": \"Şub\", \"2\": \"Mar\", \"3\": \"Nis\", \"4\": \"May\", \"5\": \"Haz\" },\n  \"datasets\": [\n    {\n      \"label\": \"Harcama\", \"color\": \"#03A9F4\",\n      \"data\": [\n        { \"x\": 0, \"y\": 2450.75 }, { \"x\": 1, \"y\": 2325.25 },\n        { \"x\": 2, \"y\": 2600.00 }, { \"x\": 3, \"y\": 2550.50 },\n        { \"x\": 4, \"y\": 2800.00 }, { \"x\": 5, \"y\": 2750.20 }\n      ]\n    }\n  ]\n}\n```\n\n**Period Options:**\n- `3_months`: Monthly trend for last 3 months (current month included)\n- `6_months`: Monthly trend for last 6 months (current month included)\n- `1_year`: Monthly trend for last 12 months (current month included)",
                "operationId": "get_spending_trends_api_v1_reports_spending_trends_get",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PeriodType",
                            "description": "Time period (this_month, 3_months, 6_months, 1_year)"
                        },
                        "description": "Time period (this_month, 3_months, 6_months, 1_year)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Financial Reporting"],
                "summary": "Spending Trends Over Time (POST)",
                "description": "POST version of spending trends endpoint for complex requests",
                "operationId": "post_spending_trends_api_v1_reports_spending_trends_post",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TrendReportRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reports/export": {
            "get": {
                "tags": ["Financial Reporting"],
                "summary": "Export Report Data",
                "description": "Export report data in various formats\n\n**Supported Report Types:**\n- `category-distribution`: Monthly category breakdown\n- `budget-vs-actual`: Budget comparison\n- `spending-trends`: Spending trends over time\n\n**Supported Formats:**\n- `json`: JSON format (default)\n- `csv`: Comma-separated values",
                "operationId": "export_report_api_v1_reports_export_get",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "report_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Report type (category-distribution, budget-vs-actual, spending-trends)",
                            "title": "Report Type"
                        },
                        "description": "Report type (category-distribution, budget-vs-actual, spending-trends)"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Export format (json, csv)",
                            "default": "json",
                            "title": "Format"
                        },
                        "description": "Export format (json, csv)"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "integer" },
                                { "type": "null" }
                            ],
                            "description": "Year for monthly reports",
                            "title": "Year"
                        },
                        "description": "Year for monthly reports"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "type": "integer" },
                                { "type": "null" }
                            ],
                            "description": "Month for monthly reports",
                            "title": "Month"
                        },
                        "description": "Month for monthly reports"
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                { "$ref": "#/components/schemas/PeriodType" },
                                { "type": "null" }
                            ],
                            "description": "Period for trend reports",
                            "title": "Period"
                        },
                        "description": "Period for trend reports"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/budget/": {
            "get": {
                "tags": ["Budget Management"],
                "summary": "Get User Budget",
                "description": "Get user's overall budget information",
                "operationId": "get_user_budget_api_v1_budget__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    }
                },
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }]
            },
            "put": {
                "tags": ["Budget Management"],
                "summary": "Update User Budget",
                "description": "Update user's overall budget\n\n**Note:** If total budget amount changes and auto_allocate is enabled,\ncategory budgets will be automatically re-allocated.",
                "operationId": "update_user_budget_api_v1_budget__put",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserBudgetUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }]
            },
            "post": {
                "tags": ["Budget Management"],
                "summary": "Create User Budget",
                "description": "Create or update user's overall monthly budget\n\n**Features:**\n- Sets total monthly budget amount\n- Optionally auto-allocates budget to categories based on research\n- Supports different currencies",
                "operationId": "create_user_budget_api_v1_budget__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserBudgetCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }]
            }
        },
        "/api/v1/budget/categories": {
            "get": {
                "tags": ["Budget Management"],
                "summary": "Get Category Budgets",
                "description": "Get all active category budgets for the user",
                "operationId": "get_category_budgets_api_v1_budget_categories_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    }
                },
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }]
            },
            "post": {
                "tags": ["Budget Management"],
                "summary": "Create Category Budget",
                "description": "Create or update budget for a specific category\n\n**Usage:**\n- Set monthly spending limit for each category\n- Enable/disable budget tracking per category\n\n**Important:**\n- Total category budgets cannot exceed 100% of your total monthly budget\n- System will check available budget before creating/updating\n- Returns error if allocation would exceed total budget",
                "operationId": "create_category_budget_api_v1_budget_categories_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BudgetCategoryCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }]
            }
        },
        "/api/v1/budget/summary": {
            "get": {
                "tags": ["Budget Management"],
                "summary": "Get Budget Summary",
                "description": "Get comprehensive budget summary including:\n- Overall budget information\n- Category-wise budget allocations\n- Total allocated vs remaining budget\n- Allocation percentage",
                "operationId": "get_budget_summary_api_v1_budget_summary_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    }
                },
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }]
            }
        },
        "/api/v1/budget/apply-allocation": {
            "post": {
                "tags": ["Budget Management"],
                "summary": "Apply Budget Allocation",
                "description": "Apply optimal budget allocation to user's system category budgets only\n\n**This will:**\n1. Generate optimal allocation for system categories (total 100%)\n2. Create/update category budgets with suggested amounts (system categories only)\n3. Return the applied allocation\n\n**Note:** \n- Only applies to predefined system categories, custom categories are not affected\n- Total allocation will be exactly 100% of the specified budget\n- Existing system category budgets will be updated, custom category budgets remain unchanged",
                "operationId": "apply_budget_allocation_api_v1_budget_apply_allocation_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BudgetAllocationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }]
            }
        },
        "/api/v1/budget/categories/{category_id}": {
            "delete": {
                "tags": ["Budget Management"],
                "summary": "Delete Category Budget",
                "description": "Deactivate budget for a specific category",
                "operationId": "delete_category_budget_api_v1_budget_categories__category_id__delete",
                "security": [{ "HTTPBearer": [] }, { "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "required": true,
                        "schema": { "type": "string", "title": "Category Id" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/budget/health": {
            "get": {
                "tags": ["Budget Management"],
                "summary": "Budget Service Health Check",
                "description": "Public health check for budget service",
                "operationId": "health_check_api_v1_budget_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    }
                }
            }
        },
        "/api/v1/loyalty/status": {
            "get": {
                "tags": ["Loyalty Program"],
                "summary": "Get Loyalty Status",
                "description": "Get user's current loyalty status including points, level, and progress",
                "operationId": "get_loyalty_status_api_v1_loyalty_status_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoyaltyStatusResponse"
                                }
                            }
                        }
                    }
                },
                "security": [{ "HTTPBearer": [] }]
            }
        },
        "/api/v1/loyalty/calculate-points": {
            "get": {
                "tags": ["Loyalty Program"],
                "summary": "Calculate Points",
                "description": "Calculate loyalty points for a given expense amount\nUseful for showing users how many points they would earn",
                "operationId": "calculate_points_api_v1_loyalty_calculate_points_get",
                "security": [{ "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "amount",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "exclusiveMinimum": 0,
                            "description": "Expense amount",
                            "title": "Amount"
                        },
                        "description": "Expense amount"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "description": "Expense category",
                            "title": "Category"
                        },
                        "description": "Expense category"
                    },
                    {
                        "name": "merchant_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [{ "type": "string" }, { "type": "null" }],
                            "description": "Merchant name",
                            "title": "Merchant Name"
                        },
                        "description": "Merchant name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PointsCalculationResult"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/loyalty/history": {
            "get": {
                "tags": ["Loyalty Program"],
                "summary": "Get Loyalty History",
                "description": "Get user's loyalty points history from recent expenses",
                "operationId": "get_loyalty_history_api_v1_loyalty_history_get",
                "security": [{ "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Maximum number of records",
                            "default": 50,
                            "title": "Limit"
                        },
                        "description": "Maximum number of records"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/loyalty/levels": {
            "get": {
                "tags": ["Loyalty Program"],
                "summary": "Get Loyalty Levels",
                "description": "Get information about all loyalty levels and their requirements",
                "operationId": "get_loyalty_levels_api_v1_loyalty_levels_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    }
                }
            }
        },
        "/api/v1/devices/register": {
            "post": {
                "tags": ["Device Management"],
                "summary": "Register Device",
                "description": "Kullanıcının cihazını ve FCM token'ını kaydet",
                "operationId": "register_device_api_v1_devices_register_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeviceRegistrationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Register Device Api V1 Devices Register Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [{ "HTTPBearer": [] }]
            }
        },
        "/api/v1/devices/": {
            "get": {
                "tags": ["Device Management"],
                "summary": "Get User Devices",
                "description": "Kullanıcının kayıtlı cihazlarını listele",
                "operationId": "get_user_devices_api_v1_devices__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/DeviceResponse"
                                    },
                                    "type": "array",
                                    "title": "Response Get User Devices Api V1 Devices  Get"
                                }
                            }
                        }
                    }
                },
                "security": [{ "HTTPBearer": [] }]
            }
        },
        "/api/v1/devices/{device_id}/deactivate": {
            "put": {
                "tags": ["Device Management"],
                "summary": "Deactivate Device",
                "description": "Cihazı deaktif et (FCM token'ını geçersiz kıl)",
                "operationId": "deactivate_device_api_v1_devices__device_id__deactivate_put",
                "security": [{ "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "device_id",
                        "in": "path",
                        "required": true,
                        "schema": { "type": "string", "title": "Device Id" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/devices/{device_id}": {
            "delete": {
                "tags": ["Device Management"],
                "summary": "Delete Device",
                "description": "Cihazı tamamen sil",
                "operationId": "delete_device_api_v1_devices__device_id__delete",
                "security": [{ "HTTPBearer": [] }],
                "parameters": [
                    {
                        "name": "device_id",
                        "in": "path",
                        "required": true,
                        "schema": { "type": "string", "title": "Device Id" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "summary": "Root",
                "description": "Ana endpoint - API bilgileri",
                "operationId": "root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    }
                }
            }
        },
        "/protected": {
            "get": {
                "summary": "Protected Route",
                "description": "Korumalı test endpoint'i",
                "operationId": "protected_route_protected_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": { "application/json": { "schema": {} } }
                    }
                },
                "security": [{ "HTTPBearer": [] }]
            }
        }
    },
    "components": {
        "schemas": {
            "BudgetAllocationRequest": {
                "properties": {
                    "total_budget": {
                        "type": "number",
                        "exclusiveMinimum": 0.0,
                        "title": "Total Budget",
                        "description": "Total budget to allocate"
                    },
                    "categories": {
                        "anyOf": [
                            { "items": { "type": "string" }, "type": "array" },
                            { "type": "null" }
                        ],
                        "title": "Categories",
                        "description": "Specific categories to allocate to"
                    }
                },
                "type": "object",
                "required": ["total_budget"],
                "title": "BudgetAllocationRequest",
                "description": "Schema for budget allocation request"
            },
            "BudgetCategoryCreate": {
                "properties": {
                    "category_id": {
                        "type": "string",
                        "title": "Category Id",
                        "description": "Category ID"
                    },
                    "monthly_limit": {
                        "type": "number",
                        "exclusiveMinimum": 0.0,
                        "title": "Monthly Limit",
                        "description": "Monthly budget limit for this category"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "description": "Whether this budget category is active",
                        "default": true
                    }
                },
                "type": "object",
                "required": ["category_id", "monthly_limit"],
                "title": "BudgetCategoryCreate",
                "description": "Schema for creating a budget category"
            },
            "BusinessType": {
                "type": "string",
                "enum": [
                    "restaurant",
                    "retail",
                    "grocery",
                    "pharmacy",
                    "gas_station",
                    "clothing",
                    "electronics",
                    "other"
                ],
                "title": "BusinessType"
            },
            "CategoryCreateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "title": "Name",
                        "description": "Category name"
                    }
                },
                "type": "object",
                "required": ["name"],
                "title": "CategoryCreateRequest",
                "description": "Request schema for category creation"
            },
            "CategoryResponse": {
                "properties": {
                    "id": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Id",
                        "description": "Category ID (null for system categories)"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Category name"
                    },
                    "user_id": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "User Id",
                        "description": "User ID (null for system categories)"
                    },
                    "is_system": {
                        "type": "boolean",
                        "title": "Is System",
                        "description": "Is system category"
                    },
                    "created_at": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Created At",
                        "description": "Creation date"
                    },
                    "updated_at": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Updated At",
                        "description": "Update date"
                    }
                },
                "type": "object",
                "required": ["name", "is_system"],
                "title": "CategoryResponse",
                "description": "Response schema for category"
            },
            "CategoryUpdateRequest": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 50,
                                "minLength": 1
                            },
                            { "type": "null" }
                        ],
                        "title": "Name",
                        "description": "Category name"
                    }
                },
                "type": "object",
                "title": "CategoryUpdateRequest",
                "description": "Request schema for category update"
            },
            "ChartType": {
                "type": "string",
                "enum": ["pie", "bar", "line", "donut"],
                "title": "ChartType",
                "description": "Chart type options"
            },
            "ConfirmResetRequest": {
                "properties": {
                    "token": { "type": "string", "title": "Token" },
                    "new_password": {
                        "type": "string",
                        "title": "New Password"
                    }
                },
                "type": "object",
                "required": ["token", "new_password"],
                "title": "ConfirmResetRequest"
            },
            "CustomerInfo": {
                "properties": {
                    "email": {
                        "anyOf": [
                            { "type": "string", "format": "email" },
                            { "type": "null" }
                        ],
                        "title": "Email"
                    },
                    "phone": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Phone"
                    },
                    "card_hash": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Card Hash",
                        "description": "Hashed card number for matching"
                    },
                    "card_last_four": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 4,
                                "minLength": 4
                            },
                            { "type": "null" }
                        ],
                        "title": "Card Last Four",
                        "description": "Last 4 digits of card"
                    },
                    "card_type": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Card Type",
                        "description": "Card type (visa, mastercard, etc.)"
                    }
                },
                "type": "object",
                "title": "CustomerInfo"
            },
            "DeleteAccountRequest": {
                "properties": {
                    "password": { "type": "string", "title": "Password" }
                },
                "type": "object",
                "required": ["password"],
                "title": "DeleteAccountRequest"
            },
            "DeviceRegistrationRequest": {
                "properties": {
                    "device_id": { "type": "string", "title": "Device Id" },
                    "fcm_token": { "type": "string", "title": "Fcm Token" },
                    "device_type": { "type": "string", "title": "Device Type" },
                    "device_name": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Device Name"
                    },
                    "app_version": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "App Version"
                    },
                    "os_version": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Os Version"
                    }
                },
                "type": "object",
                "required": ["device_id", "fcm_token", "device_type"],
                "title": "DeviceRegistrationRequest"
            },
            "DeviceResponse": {
                "properties": {
                    "id": { "type": "string", "title": "Id" },
                    "device_id": { "type": "string", "title": "Device Id" },
                    "device_type": { "type": "string", "title": "Device Type" },
                    "device_name": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Device Name"
                    },
                    "is_active": { "type": "boolean", "title": "Is Active" },
                    "last_used_at": {
                        "type": "string",
                        "title": "Last Used At"
                    },
                    "created_at": { "type": "string", "title": "Created At" }
                },
                "type": "object",
                "required": [
                    "id",
                    "device_id",
                    "device_type",
                    "device_name",
                    "is_active",
                    "last_used_at",
                    "created_at"
                ],
                "title": "DeviceResponse"
            },
            "DisableTOTPRequest": {
                "properties": {
                    "factor_id": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Factor Id"
                    },
                    "code": { "type": "string", "title": "Code" }
                },
                "type": "object",
                "required": ["code"],
                "title": "DisableTOTPRequest"
            },
            "ExpenseItemCreateRequest": {
                "properties": {
                    "category_id": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Category Id",
                        "description": "Category ID"
                    },
                    "item_name": {
                        "type": "string",
                        "maxLength": 200,
                        "minLength": 1,
                        "title": "Item Name",
                        "description": "Item name"
                    },
                    "amount": {
                        "type": "number",
                        "exclusiveMinimum": 0.0,
                        "title": "Amount",
                        "description": "Item amount"
                    },
                    "quantity": {
                        "type": "integer",
                        "exclusiveMinimum": 0.0,
                        "title": "Quantity",
                        "description": "Item quantity",
                        "default": 1
                    },
                    "unit_price": {
                        "anyOf": [
                            { "type": "number", "exclusiveMinimum": 0.0 },
                            { "type": "null" }
                        ],
                        "title": "Unit Price",
                        "description": "Unit price"
                    },
                    "kdv_rate": {
                        "type": "number",
                        "title": "Kdv Rate",
                        "description": "KDV (VAT) rate for this item (1%, 10%, 20%)",
                        "default": 20.0
                    },
                    "notes": {
                        "anyOf": [
                            { "type": "string", "maxLength": 500 },
                            { "type": "null" }
                        ],
                        "title": "Notes",
                        "description": "Item notes"
                    }
                },
                "type": "object",
                "required": ["item_name", "amount"],
                "title": "ExpenseItemCreateRequest",
                "description": "Request schema for creating expense item"
            },
            "ExpenseItemResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Expense item ID"
                    },
                    "expense_id": {
                        "type": "string",
                        "title": "Expense Id",
                        "description": "Parent expense ID"
                    },
                    "category_id": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Category Id",
                        "description": "Category ID"
                    },
                    "category_name": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Category Name",
                        "description": "Category name"
                    },
                    "item_name": {
                        "type": "string",
                        "title": "Item Name",
                        "description": "Item name"
                    },
                    "amount": {
                        "type": "number",
                        "title": "Amount",
                        "description": "Item amount"
                    },
                    "quantity": {
                        "type": "integer",
                        "title": "Quantity",
                        "description": "Item quantity"
                    },
                    "unit_price": {
                        "anyOf": [{ "type": "number" }, { "type": "null" }],
                        "title": "Unit Price",
                        "description": "Unit price"
                    },
                    "kdv_rate": {
                        "type": "number",
                        "title": "Kdv Rate",
                        "description": "KDV (VAT) rate for this item"
                    },
                    "kdv_amount": {
                        "anyOf": [{ "type": "number" }, { "type": "null" }],
                        "title": "Kdv Amount",
                        "description": "Calculated KDV amount"
                    },
                    "amount_without_kdv": {
                        "anyOf": [{ "type": "number" }, { "type": "null" }],
                        "title": "Amount Without Kdv",
                        "description": "Amount without KDV"
                    },
                    "notes": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Notes",
                        "description": "Item notes"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation date"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "Update date"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "expense_id",
                    "item_name",
                    "amount",
                    "quantity",
                    "kdv_rate",
                    "created_at",
                    "updated_at"
                ],
                "title": "ExpenseItemResponse",
                "description": "Response schema for expense item"
            },
            "ExpenseItemUpdateRequest": {
                "properties": {
                    "category_id": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Category Id",
                        "description": "Category ID"
                    },
                    "item_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 200,
                                "minLength": 1
                            },
                            { "type": "null" }
                        ],
                        "title": "Item Name",
                        "description": "Item name"
                    },
                    "amount": {
                        "anyOf": [
                            { "type": "number", "exclusiveMinimum": 0.0 },
                            { "type": "null" }
                        ],
                        "title": "Amount",
                        "description": "Item amount"
                    },
                    "quantity": {
                        "anyOf": [
                            { "type": "integer", "exclusiveMinimum": 0.0 },
                            { "type": "null" }
                        ],
                        "title": "Quantity",
                        "description": "Item quantity"
                    },
                    "kdv_rate": {
                        "anyOf": [{ "type": "number" }, { "type": "null" }],
                        "title": "Kdv Rate",
                        "description": "KDV (VAT) rate for this item"
                    },
                    "unit_price": {
                        "anyOf": [
                            { "type": "number", "exclusiveMinimum": 0.0 },
                            { "type": "null" }
                        ],
                        "title": "Unit Price",
                        "description": "Unit price"
                    },
                    "notes": {
                        "anyOf": [
                            { "type": "string", "maxLength": 500 },
                            { "type": "null" }
                        ],
                        "title": "Notes",
                        "description": "Item notes"
                    }
                },
                "type": "object",
                "title": "ExpenseItemUpdateRequest",
                "description": "Request schema for updating expense item"
            },
            "ExpenseListResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Expense ID"
                    },
                    "receipt_id": {
                        "type": "string",
                        "title": "Receipt Id",
                        "description": "Receipt ID"
                    },
                    "total_amount": {
                        "type": "number",
                        "title": "Total Amount",
                        "description": "Total amount"
                    },
                    "expense_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Expense Date",
                        "description": "Expense date"
                    },
                    "notes": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Notes",
                        "description": "General notes"
                    },
                    "items_count": {
                        "type": "integer",
                        "title": "Items Count",
                        "description": "Number of items"
                    },
                    "merchant_name": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Merchant Name",
                        "description": "Merchant name"
                    },
                    "source": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Source",
                        "description": "Source type"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation date"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "receipt_id",
                    "total_amount",
                    "expense_date",
                    "items_count",
                    "created_at"
                ],
                "title": "ExpenseListResponse",
                "description": "Response schema for expense list (summary)"
            },
            "ExpenseResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Expense ID"
                    },
                    "receipt_id": {
                        "type": "string",
                        "title": "Receipt Id",
                        "description": "Receipt ID"
                    },
                    "total_amount": {
                        "type": "number",
                        "title": "Total Amount",
                        "description": "Total amount of all items"
                    },
                    "expense_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Expense Date",
                        "description": "Expense date"
                    },
                    "notes": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Notes",
                        "description": "General notes"
                    },
                    "merchant_name": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Merchant Name",
                        "description": "Merchant name"
                    },
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/ExpenseItemResponse"
                        },
                        "type": "array",
                        "title": "Items",
                        "description": "Expense items"
                    },
                    "qr_code": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Qr Code",
                        "description": "Base64 encoded QR code for receipt"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation date"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "Update date"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "receipt_id",
                    "total_amount",
                    "expense_date",
                    "created_at",
                    "updated_at"
                ],
                "title": "ExpenseResponse",
                "description": "Response schema for expense (summary/container)"
            },
            "ExpenseUpdateRequest": {
                "properties": {
                    "expense_date": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Expense Date",
                        "description": "Expense date"
                    },
                    "notes": {
                        "anyOf": [
                            { "type": "string", "maxLength": 500 },
                            { "type": "null" }
                        ],
                        "title": "Notes",
                        "description": "General notes"
                    },
                    "merchant_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 100,
                                "minLength": 1
                            },
                            { "type": "null" }
                        ],
                        "title": "Merchant Name",
                        "description": "Merchant name"
                    }
                },
                "type": "object",
                "title": "ExpenseUpdateRequest",
                "description": "Request schema for expense update (summary level)"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "LoyaltyLevel": {
                "type": "string",
                "enum": ["bronze", "silver", "gold", "platinum"],
                "title": "LoyaltyLevel",
                "description": "Loyalty program levels"
            },
            "LoyaltyStatusResponse": {
                "properties": {
                    "user_id": { "type": "string", "title": "User Id" },
                    "points": {
                        "type": "integer",
                        "minimum": 0.0,
                        "title": "Points",
                        "description": "Current loyalty points"
                    },
                    "level": {
                        "anyOf": [
                            { "$ref": "#/components/schemas/LoyaltyLevel" },
                            { "type": "null" }
                        ],
                        "description": "Current loyalty level"
                    },
                    "points_to_next_level": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Points To Next Level",
                        "description": "Points needed for next level"
                    },
                    "next_level": {
                        "anyOf": [
                            { "$ref": "#/components/schemas/LoyaltyLevel" },
                            { "type": "null" }
                        ],
                        "description": "Next achievable level"
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last Updated"
                    }
                },
                "type": "object",
                "required": ["user_id", "points", "last_updated"],
                "title": "LoyaltyStatusResponse",
                "description": "Response model for loyalty status"
            },
            "ManualExpenseRequest": {
                "properties": {
                    "merchant_name": {
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1,
                        "title": "Merchant Name",
                        "description": "Merchant name"
                    },
                    "expense_date": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Expense Date",
                        "description": "Expense date"
                    },
                    "notes": {
                        "anyOf": [
                            { "type": "string", "maxLength": 500 },
                            { "type": "null" }
                        ],
                        "title": "Notes",
                        "description": "General notes"
                    },
                    "currency": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Currency",
                        "description": "Currency code",
                        "default": "TRY"
                    },
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/ExpenseItemCreateRequest"
                        },
                        "type": "array",
                        "minItems": 1,
                        "title": "Items",
                        "description": "Expense items"
                    }
                },
                "type": "object",
                "required": ["merchant_name", "items"],
                "title": "ManualExpenseRequest",
                "description": "Request schema for manual expense entry"
            },
            "MerchantCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Name",
                        "description": "Merchant name"
                    },
                    "business_type": {
                        "anyOf": [
                            { "$ref": "#/components/schemas/BusinessType" },
                            { "type": "null" }
                        ],
                        "description": "Type of business"
                    },
                    "contact_email": {
                        "anyOf": [
                            { "type": "string", "format": "email" },
                            { "type": "null" }
                        ],
                        "title": "Contact Email",
                        "description": "Contact email"
                    },
                    "contact_phone": {
                        "anyOf": [
                            { "type": "string", "maxLength": 20 },
                            { "type": "null" }
                        ],
                        "title": "Contact Phone",
                        "description": "Contact phone"
                    },
                    "address": {
                        "anyOf": [
                            { "type": "string", "maxLength": 500 },
                            { "type": "null" }
                        ],
                        "title": "Address",
                        "description": "Business address"
                    },
                    "tax_number": {
                        "anyOf": [
                            { "type": "string", "maxLength": 50 },
                            { "type": "null" }
                        ],
                        "title": "Tax Number",
                        "description": "Tax identification number"
                    },
                    "webhook_url": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Webhook Url",
                        "description": "Webhook URL for transaction notifications"
                    },
                    "settings": {
                        "anyOf": [
                            { "additionalProperties": true, "type": "object" },
                            { "type": "null" }
                        ],
                        "title": "Settings",
                        "description": "Additional merchant settings"
                    }
                },
                "type": "object",
                "required": ["name"],
                "title": "MerchantCreate"
            },
            "MerchantListResponse": {
                "properties": {
                    "merchants": {
                        "items": {
                            "$ref": "#/components/schemas/MerchantResponse"
                        },
                        "type": "array",
                        "title": "Merchants"
                    },
                    "total": { "type": "integer", "title": "Total" },
                    "page": { "type": "integer", "title": "Page" },
                    "size": { "type": "integer", "title": "Size" },
                    "has_next": { "type": "boolean", "title": "Has Next" }
                },
                "type": "object",
                "required": ["merchants", "total", "page", "size", "has_next"],
                "title": "MerchantListResponse"
            },
            "MerchantRatingResponse": {
                "properties": {
                    "merchant_id": {
                        "type": "string",
                        "title": "Merchant Id",
                        "description": "Merchant ID"
                    },
                    "merchant_name": {
                        "type": "string",
                        "title": "Merchant Name",
                        "description": "Merchant name"
                    },
                    "total_reviews": {
                        "type": "integer",
                        "title": "Total Reviews",
                        "description": "Total number of reviews"
                    },
                    "average_rating": {
                        "type": "number",
                        "title": "Average Rating",
                        "description": "Average rating"
                    },
                    "rating_distribution": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Rating Distribution",
                        "description": "Distribution of ratings (1-5)"
                    }
                },
                "type": "object",
                "required": [
                    "merchant_id",
                    "merchant_name",
                    "total_reviews",
                    "average_rating",
                    "rating_distribution"
                ],
                "title": "MerchantRatingResponse",
                "description": "Response schema for merchant rating summary"
            },
            "MerchantResponse": {
                "properties": {
                    "id": { "type": "string", "format": "uuid", "title": "Id" },
                    "name": { "type": "string", "title": "Name" },
                    "business_type": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Business Type"
                    },
                    "api_key": { "type": "string", "title": "Api Key" },
                    "webhook_url": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Webhook Url"
                    },
                    "is_active": { "type": "boolean", "title": "Is Active" },
                    "contact_email": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Contact Email"
                    },
                    "contact_phone": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Contact Phone"
                    },
                    "address": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Address"
                    },
                    "tax_number": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Tax Number"
                    },
                    "settings": {
                        "anyOf": [
                            { "additionalProperties": true, "type": "object" },
                            { "type": "null" }
                        ],
                        "title": "Settings"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "business_type",
                    "api_key",
                    "webhook_url",
                    "is_active",
                    "contact_email",
                    "contact_phone",
                    "address",
                    "tax_number",
                    "settings",
                    "created_at",
                    "updated_at"
                ],
                "title": "MerchantResponse"
            },
            "MerchantReviewsResponse": {
                "properties": {
                    "merchant_rating": {
                        "$ref": "#/components/schemas/MerchantRatingResponse",
                        "description": "Merchant rating summary"
                    },
                    "recent_reviews": {
                        "items": {
                            "$ref": "#/components/schemas/ReviewResponse"
                        },
                        "type": "array",
                        "title": "Recent Reviews",
                        "description": "Recent reviews"
                    },
                    "user_review": {
                        "anyOf": [
                            { "$ref": "#/components/schemas/ReviewResponse" },
                            { "type": "null" }
                        ],
                        "description": "Current user's review if exists"
                    }
                },
                "type": "object",
                "required": ["merchant_rating"],
                "title": "MerchantReviewsResponse",
                "description": "Response schema for merchant reviews with stats"
            },
            "MerchantUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255,
                                "minLength": 1
                            },
                            { "type": "null" }
                        ],
                        "title": "Name"
                    },
                    "business_type": {
                        "anyOf": [
                            { "$ref": "#/components/schemas/BusinessType" },
                            { "type": "null" }
                        ]
                    },
                    "contact_email": {
                        "anyOf": [
                            { "type": "string", "format": "email" },
                            { "type": "null" }
                        ],
                        "title": "Contact Email"
                    },
                    "contact_phone": {
                        "anyOf": [
                            { "type": "string", "maxLength": 20 },
                            { "type": "null" }
                        ],
                        "title": "Contact Phone"
                    },
                    "address": {
                        "anyOf": [
                            { "type": "string", "maxLength": 500 },
                            { "type": "null" }
                        ],
                        "title": "Address"
                    },
                    "tax_number": {
                        "anyOf": [
                            { "type": "string", "maxLength": 50 },
                            { "type": "null" }
                        ],
                        "title": "Tax Number"
                    },
                    "webhook_url": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Webhook Url"
                    },
                    "is_active": {
                        "anyOf": [{ "type": "boolean" }, { "type": "null" }],
                        "title": "Is Active"
                    },
                    "settings": {
                        "anyOf": [
                            { "additionalProperties": true, "type": "object" },
                            { "type": "null" }
                        ],
                        "title": "Settings"
                    }
                },
                "type": "object",
                "title": "MerchantUpdate"
            },
            "MonthlyReportRequest": {
                "properties": {
                    "year": {
                        "type": "integer",
                        "title": "Year",
                        "description": "Year"
                    },
                    "month": {
                        "type": "integer",
                        "maximum": 12.0,
                        "minimum": 1.0,
                        "title": "Month",
                        "description": "Month (1-12)"
                    },
                    "chart_type": {
                        "$ref": "#/components/schemas/ChartType",
                        "description": "Chart type"
                    }
                },
                "type": "object",
                "required": ["year", "month", "chart_type"],
                "title": "MonthlyReportRequest",
                "description": "Request for monthly reports (pie/bar charts)"
            },
            "PeriodType": {
                "type": "string",
                "enum": ["3_months", "6_months", "1_year"],
                "title": "PeriodType",
                "description": "Period type options for trends"
            },
            "PointsCalculationResult": {
                "properties": {
                    "base_points": {
                        "type": "integer",
                        "title": "Base Points",
                        "description": "Base points from amount"
                    },
                    "bonus_points": {
                        "type": "integer",
                        "title": "Bonus Points",
                        "description": "Bonus points from multipliers",
                        "default": 0
                    },
                    "total_points": {
                        "type": "integer",
                        "title": "Total Points",
                        "description": "Total points earned"
                    },
                    "calculation_details": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Calculation Details",
                        "description": "Calculation breakdown"
                    }
                },
                "type": "object",
                "required": ["base_points", "total_points"],
                "title": "PointsCalculationResult",
                "description": "Result of points calculation"
            },
            "QRReceiptRequest": {
                "properties": {
                    "qr_data": {
                        "type": "string",
                        "title": "Qr Data",
                        "description": "Raw QR code data"
                    }
                },
                "type": "object",
                "required": ["qr_data"],
                "title": "QRReceiptRequest",
                "description": "Request schema for QR receipt scanning"
            },
            "QRReceiptResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "Success",
                        "description": "Processing success"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "Response message"
                    },
                    "receipt_id": {
                        "type": "string",
                        "title": "Receipt Id",
                        "description": "Created receipt ID"
                    },
                    "merchant_name": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Merchant Name",
                        "description": "Merchant name"
                    },
                    "total_amount": {
                        "anyOf": [{ "type": "number" }, { "type": "null" }],
                        "title": "Total Amount",
                        "description": "Total amount"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency",
                        "description": "Currency",
                        "default": "TRY"
                    },
                    "expenses_count": {
                        "type": "integer",
                        "title": "Expenses Count",
                        "description": "Number of expenses created"
                    },
                    "processing_confidence": {
                        "type": "number",
                        "title": "Processing Confidence",
                        "description": "Processing confidence"
                    },
                    "public_url": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Public Url",
                        "description": "Public URL for viewing receipt"
                    }
                },
                "type": "object",
                "required": [
                    "success",
                    "message",
                    "receipt_id",
                    "expenses_count",
                    "processing_confidence"
                ],
                "title": "QRReceiptResponse",
                "description": "Response schema for QR receipt processing"
            },
            "ReceiptDetailResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Receipt ID"
                    },
                    "merchant_name": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Merchant Name",
                        "description": "Merchant name"
                    },
                    "transaction_date": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Transaction Date",
                        "description": "Transaction date"
                    },
                    "total_amount": {
                        "anyOf": [{ "type": "number" }, { "type": "null" }],
                        "title": "Total Amount",
                        "description": "Total amount"
                    },
                    "currency": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Currency",
                        "description": "Currency"
                    },
                    "source": {
                        "type": "string",
                        "title": "Source",
                        "description": "Source type"
                    },
                    "raw_qr_data": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Raw Qr Data",
                        "description": "Raw QR data"
                    },
                    "parsed_receipt_data": {
                        "anyOf": [
                            { "additionalProperties": true, "type": "object" },
                            { "type": "null" }
                        ],
                        "title": "Parsed Receipt Data",
                        "description": "Parsed data"
                    },
                    "expenses": {
                        "items": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Expenses",
                        "description": "Associated expenses"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation date"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "Update date"
                    }
                },
                "type": "object",
                "required": ["id", "source", "created_at", "updated_at"],
                "title": "ReceiptDetailResponse",
                "description": "Response schema for receipt detail"
            },
            "ReceiptListResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Receipt ID"
                    },
                    "merchant_name": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Merchant Name",
                        "description": "Merchant name"
                    },
                    "transaction_date": {
                        "anyOf": [
                            { "type": "string", "format": "date-time" },
                            { "type": "null" }
                        ],
                        "title": "Transaction Date",
                        "description": "Transaction date"
                    },
                    "total_amount": {
                        "anyOf": [{ "type": "number" }, { "type": "null" }],
                        "title": "Total Amount",
                        "description": "Total amount"
                    },
                    "currency": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Currency",
                        "description": "Currency"
                    },
                    "source": {
                        "type": "string",
                        "title": "Source",
                        "description": "Source type"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation date"
                    }
                },
                "type": "object",
                "required": ["id", "source", "created_at"],
                "title": "ReceiptListResponse",
                "description": "Response schema for receipt list"
            },
            "ResetPasswordRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": ["email"],
                "title": "ResetPasswordRequest"
            },
            "ReviewCreateRequest": {
                "properties": {
                    "rating": {
                        "type": "integer",
                        "maximum": 5.0,
                        "minimum": 1.0,
                        "title": "Rating",
                        "description": "Rating from 1 to 5 stars"
                    },
                    "comment": {
                        "anyOf": [
                            { "type": "string", "maxLength": 500 },
                            { "type": "null" }
                        ],
                        "title": "Comment",
                        "description": "Review comment"
                    },
                    "reviewer_name": {
                        "anyOf": [
                            { "type": "string", "maxLength": 100 },
                            { "type": "null" }
                        ],
                        "title": "Reviewer Name",
                        "description": "Reviewer name (for anonymous reviews)"
                    },
                    "reviewer_email": {
                        "anyOf": [
                            { "type": "string", "maxLength": 255 },
                            { "type": "null" }
                        ],
                        "title": "Reviewer Email",
                        "description": "Reviewer email (for anonymous reviews)"
                    },
                    "is_anonymous": {
                        "type": "boolean",
                        "title": "Is Anonymous",
                        "description": "Whether this is an anonymous review",
                        "default": false
                    },
                    "receipt_id": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Receipt Id",
                        "description": "Receipt ID that triggered this review (optional)"
                    }
                },
                "type": "object",
                "required": ["rating"],
                "title": "ReviewCreateRequest",
                "description": "Request schema for creating a merchant review"
            },
            "ReviewResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Review ID"
                    },
                    "merchant_id": {
                        "type": "string",
                        "title": "Merchant Id",
                        "description": "Merchant ID"
                    },
                    "rating": {
                        "type": "integer",
                        "title": "Rating",
                        "description": "Rating from 1 to 5"
                    },
                    "comment": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Comment",
                        "description": "Review comment"
                    },
                    "reviewer_name": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Reviewer Name",
                        "description": "Reviewer name"
                    },
                    "is_anonymous": {
                        "type": "boolean",
                        "title": "Is Anonymous",
                        "description": "Is anonymous review"
                    },
                    "receipt_id": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Receipt Id",
                        "description": "Receipt ID that triggered this review"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation date"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "merchant_id",
                    "rating",
                    "is_anonymous",
                    "created_at"
                ],
                "title": "ReviewResponse",
                "description": "Response schema for review"
            },
            "ReviewUpdateRequest": {
                "properties": {
                    "rating": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 5.0,
                                "minimum": 1.0
                            },
                            { "type": "null" }
                        ],
                        "title": "Rating",
                        "description": "Updated rating"
                    },
                    "comment": {
                        "anyOf": [
                            { "type": "string", "maxLength": 500 },
                            { "type": "null" }
                        ],
                        "title": "Comment",
                        "description": "Updated comment"
                    }
                },
                "type": "object",
                "title": "ReviewUpdateRequest",
                "description": "Request schema for updating a review"
            },
            "TestTransactionRequest": {
                "properties": {
                    "transaction_data": {
                        "$ref": "#/components/schemas/WebhookTransactionData"
                    },
                    "test_mode": {
                        "type": "boolean",
                        "title": "Test Mode",
                        "description": "Indicates this is a test transaction",
                        "default": true
                    }
                },
                "type": "object",
                "required": ["transaction_data"],
                "title": "TestTransactionRequest"
            },
            "TransactionItem": {
                "properties": {
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Description",
                        "description": "Item description"
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 1.0,
                        "title": "Quantity",
                        "description": "Item quantity"
                    },
                    "unit_price": {
                        "type": "number",
                        "minimum": 0.0,
                        "title": "Unit Price",
                        "description": "Unit price"
                    },
                    "total_price": {
                        "type": "number",
                        "minimum": 0.0,
                        "title": "Total Price",
                        "description": "Total price for this item"
                    },
                    "category": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Category",
                        "description": "Item category"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "quantity",
                    "unit_price",
                    "total_price"
                ],
                "title": "TransactionItem"
            },
            "TrendReportRequest": {
                "properties": {
                    "period": {
                        "$ref": "#/components/schemas/PeriodType",
                        "description": "Time period"
                    },
                    "chart_type": {
                        "$ref": "#/components/schemas/ChartType",
                        "description": "Chart type",
                        "default": "line"
                    }
                },
                "type": "object",
                "required": ["period"],
                "title": "TrendReportRequest",
                "description": "Request for trend reports (line charts)"
            },
            "UserBudgetCreate": {
                "properties": {
                    "total_monthly_budget": {
                        "type": "number",
                        "exclusiveMinimum": 0.0,
                        "title": "Total Monthly Budget",
                        "description": "Total monthly budget amount"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency",
                        "description": "Budget currency",
                        "default": "TRY"
                    },
                    "auto_allocate": {
                        "type": "boolean",
                        "title": "Auto Allocate",
                        "description": "Whether to auto-allocate budget to categories",
                        "default": true
                    }
                },
                "type": "object",
                "required": ["total_monthly_budget"],
                "title": "UserBudgetCreate",
                "description": "Schema for creating user's overall budget"
            },
            "UserBudgetUpdate": {
                "properties": {
                    "total_monthly_budget": {
                        "anyOf": [
                            { "type": "number", "exclusiveMinimum": 0.0 },
                            { "type": "null" }
                        ],
                        "title": "Total Monthly Budget",
                        "description": "Total monthly budget amount"
                    },
                    "currency": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Currency",
                        "description": "Budget currency"
                    },
                    "auto_allocate": {
                        "anyOf": [{ "type": "boolean" }, { "type": "null" }],
                        "title": "Auto Allocate",
                        "description": "Whether to auto-allocate budget to categories"
                    }
                },
                "type": "object",
                "title": "UserBudgetUpdate",
                "description": "Schema for updating user's overall budget"
            },
            "UserLogin": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "password": { "type": "string", "title": "Password" }
                },
                "type": "object",
                "required": ["email", "password"],
                "title": "UserLogin"
            },
            "UserSignUp": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "password": { "type": "string", "title": "Password" },
                    "first_name": { "type": "string", "title": "First Name" },
                    "last_name": { "type": "string", "title": "Last Name" }
                },
                "type": "object",
                "required": ["email", "password", "first_name", "last_name"],
                "title": "UserSignUp"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                { "type": "string" },
                                { "type": "integer" }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": { "type": "string", "title": "Message" },
                    "type": { "type": "string", "title": "Error Type" }
                },
                "type": "object",
                "required": ["loc", "msg", "type"],
                "title": "ValidationError"
            },
            "VerifyTOTPRequest": {
                "properties": {
                    "factor_id": { "type": "string", "title": "Factor Id" },
                    "code": { "type": "string", "title": "Code" }
                },
                "type": "object",
                "required": ["factor_id", "code"],
                "title": "VerifyTOTPRequest"
            },
            "WebhookLogListResponse": {
                "properties": {
                    "logs": {
                        "items": {
                            "$ref": "#/components/schemas/WebhookLogResponse"
                        },
                        "type": "array",
                        "title": "Logs"
                    },
                    "total": { "type": "integer", "title": "Total" },
                    "page": { "type": "integer", "title": "Page" },
                    "size": { "type": "integer", "title": "Size" },
                    "has_next": { "type": "boolean", "title": "Has Next" }
                },
                "type": "object",
                "required": ["logs", "total", "page", "size", "has_next"],
                "title": "WebhookLogListResponse"
            },
            "WebhookLogResponse": {
                "properties": {
                    "id": { "type": "string", "format": "uuid", "title": "Id" },
                    "merchant_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Merchant Id"
                    },
                    "transaction_id": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Transaction Id"
                    },
                    "status": { "$ref": "#/components/schemas/WebhookStatus" },
                    "response_code": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Response Code"
                    },
                    "error_message": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Error Message"
                    },
                    "processing_time_ms": {
                        "anyOf": [{ "type": "integer" }, { "type": "null" }],
                        "title": "Processing Time Ms"
                    },
                    "retry_count": {
                        "type": "integer",
                        "title": "Retry Count"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "merchant_id",
                    "transaction_id",
                    "status",
                    "response_code",
                    "error_message",
                    "processing_time_ms",
                    "retry_count",
                    "created_at"
                ],
                "title": "WebhookLogResponse"
            },
            "WebhookProcessingResult": {
                "properties": {
                    "success": { "type": "boolean", "title": "Success" },
                    "message": { "type": "string", "title": "Message" },
                    "transaction_id": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Transaction Id"
                    },
                    "matched_user_id": {
                        "anyOf": [
                            { "type": "string", "format": "uuid" },
                            { "type": "null" }
                        ],
                        "title": "Matched User Id"
                    },
                    "created_receipt_id": {
                        "anyOf": [
                            { "type": "string", "format": "uuid" },
                            { "type": "null" }
                        ],
                        "title": "Created Receipt Id"
                    },
                    "created_expense_id": {
                        "anyOf": [
                            { "type": "string", "format": "uuid" },
                            { "type": "null" }
                        ],
                        "title": "Created Expense Id"
                    },
                    "processing_time_ms": {
                        "type": "integer",
                        "title": "Processing Time Ms"
                    },
                    "errors": {
                        "anyOf": [
                            { "items": { "type": "string" }, "type": "array" },
                            { "type": "null" }
                        ],
                        "title": "Errors"
                    },
                    "is_public_receipt": {
                        "type": "boolean",
                        "title": "Is Public Receipt",
                        "description": "True if receipt was created as public (no user matched)",
                        "default": false
                    },
                    "qr_code": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Qr Code",
                        "description": "Base64 encoded QR code for the receipt"
                    },
                    "public_url": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Public Url",
                        "description": "Public URL for viewing the receipt (for public receipts)"
                    }
                },
                "type": "object",
                "required": ["success", "message", "processing_time_ms"],
                "title": "WebhookProcessingResult"
            },
            "WebhookStatus": {
                "type": "string",
                "enum": ["success", "failed", "retry", "pending"],
                "title": "WebhookStatus"
            },
            "WebhookTransactionData": {
                "properties": {
                    "transaction_id": {
                        "type": "string",
                        "title": "Transaction Id",
                        "description": "Unique transaction ID from merchant"
                    },
                    "merchant_transaction_id": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Merchant Transaction Id",
                        "description": "Internal merchant transaction ID"
                    },
                    "total_amount": {
                        "type": "number",
                        "minimum": 0.0,
                        "title": "Total Amount",
                        "description": "Total transaction amount"
                    },
                    "currency": {
                        "type": "string",
                        "title": "Currency",
                        "description": "Currency code",
                        "default": "TRY"
                    },
                    "transaction_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Transaction Date",
                        "description": "Transaction timestamp"
                    },
                    "customer_info": {
                        "$ref": "#/components/schemas/CustomerInfo",
                        "description": "Customer information for matching"
                    },
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/TransactionItem"
                        },
                        "type": "array",
                        "minItems": 1,
                        "title": "Items",
                        "description": "Transaction items"
                    },
                    "payment_method": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Payment Method",
                        "description": "Payment method used"
                    },
                    "receipt_number": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Receipt Number",
                        "description": "Receipt number"
                    },
                    "cashier_id": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Cashier Id",
                        "description": "Cashier identifier"
                    },
                    "store_location": {
                        "anyOf": [{ "type": "string" }, { "type": "null" }],
                        "title": "Store Location",
                        "description": "Store location/branch"
                    },
                    "additional_data": {
                        "anyOf": [
                            { "additionalProperties": true, "type": "object" },
                            { "type": "null" }
                        ],
                        "title": "Additional Data",
                        "description": "Additional transaction data"
                    }
                },
                "type": "object",
                "required": [
                    "transaction_id",
                    "total_amount",
                    "transaction_date",
                    "customer_info",
                    "items"
                ],
                "title": "WebhookTransactionData"
            }
        },
        "securitySchemes": {
            "HTTPBearer": { "type": "http", "scheme": "bearer" }
        }
    }
}
